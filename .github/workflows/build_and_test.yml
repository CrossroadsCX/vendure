name: Build & Test

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

env:
  CI: true
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install & build
      run: |
        yarn install
        yarn bootstrap
        yarn build
  unit-tests:
    needs: build
    name: unit tests
    steps:
      - name: Unit tests
        run: yarn test
  e2e-tests:
    needs: build
    name: e2e tests
    services:
      mysql:
        image: bitnami/mariadb:latest
        env:
          ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: Be70
        ports:
          - 5432
        options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3
      elastic:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
        env:
          discovery.type: single-node
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms512m -Xmx512m
        ports:
          - 9200
        options: --health-cmd="curl --silent --fail localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        db: [sqljs, mysql, postgres]
    env:
      E2E_MYSQL_PORT: ${{ job.services.mysql.ports['3306'] }}
      E2E_POSTGRES_PORT: ${{ job.services.postgres.ports['5432'] }}
      E2E_ELASTIC_PORT: ${{ job.services.elastic.ports['9200'] }}
      DB: ${{ matrix.db }}
    steps:
      - name: e2e tests
        run: yarn e2e
